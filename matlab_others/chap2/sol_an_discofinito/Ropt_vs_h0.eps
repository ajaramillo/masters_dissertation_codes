%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.24.3 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Linux 3.11.10-11-desktop #1 SMP PREEMPT Mon May 12 13:37:06 UTC 2014 (3d22b5f) x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 351 295
%%HiResBoundingBox: 0 0 351 295
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font GKCFGP+Helvetica
%!FontType1-1.0: GKCFGP+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 1999 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /GKCFGP+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 679 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 82 /R put
dup 104 /h put
dup 111 /o put
dup 112 /p put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74E937CCBD27A32CB3BCF5FE6
C45D34D885BFB86FF35F8A39193D6AFA1154DD6CFCB449610B21CB4CFFB833C2
18528CD67B4B020215A159DAA1CD4DE9F6ED0EB9FDB22E7590446FDACF906E59
F676922B4D76BDC00E1B46AAA48EF0678F4576E301D769D3EC0FF37240B82C32
106A1BDE1DDE4827565E6CF1440C37231E2276BE009E24480F604E8F13932B14
76219DFC241E41DED4874DC52821D50A2FAD072B9257F5FAD271327D792A1777
7C6E55B64066961B72A2F0D0893D43833BB9DB44C2C3D87CFB7F9F5D4C0AB2E3
43F7C6FBED9BED7E0BF9E9DB188D6085ED967B9DAE3BC211FDDAC22A81A604B9
7A60DB7DB4339017BD835ADF11E03DA4864C8B8510DAFB3946432A102B9E25D3
F93A3CBF9A6E48088BCB59ABA263C8B700AC75D8BA4C6B06035476F49EA053AE
29E56D770A68166F1EAF9CA9C6195DD7677D8093A70658706EAE7E3F633B5FA2
9731D51FD6609386DBD76F9C660B64EF8826300BC34A3E746B59711910A1DF15
BAC6D8B1B21624408626198D30B038C7F6055ECD2B45E105BE1B7E86C18F67D7
761F7ABE84B159CB7A2251F0D8DFB355A5098112969A7B0CC6608A9D1482206F
CA1D6974D24E0BC3492D4E06D1B4DBBDD7E2AC49FBE0F9CCD7E1701B9D1F1E95
C00E259C8974A3683938CBCD317CBC025B165369237CD2CE6E3F981E7100C0DD
76CF6A7FDD2D63182B366EFEF2C543AD940D7384414D1F6DB62222BE3C8A45F9
2529BF882352D6F681EE7BE8D9104E93AD4B09AA3E78B05DDB2667D6E7815701
192C18B4305085DEFD1096B729A6E6BDF5D6EB99C457922CEDB0059E02259778
957CE49FE1F46D808CDE4B2F7C8BE0FEB8BF35DE314EB97582EB6F8A8C716988
7E339D983CF14CF255F0F2364AEC16A7AA28B1DB85FD0869822B4A975CE21896
6AB81EFA6A6583B1A5265B5519238B47A64068F95CC978E2209B04F87CB1B599
E519423823D749106FA21B028636802629F651B97DDDCF975E6BB7CD21A87E3D
3F3B3DA2BFC24FB4DA0A519F83D08F272A0BFF0D7D21D5907C7CD0DD5ABBDFD0
5FC6AF8CB61961CA3073D66A4D89CDA50F5052F89228E53C2D5EB2F524A86680
97CE8B9B634E69FB146E921FD5A051AF7E8F305B345321A52C67F28B6EBAF3B2
F66F3F3B5F4B1F22D8AD38582AE5F739E01D4289742398DF7143130C2A44CDE8
8AA54D3D40D2AA0F5E8B8710D7159F27C9D797A53C154381D56E90952B819C1D
83F30E2B5B39AC326A21CDBE0BDEE9566CFD0F8BBADEA0EA592DF6AB4C82CFA1
8559D248865557BE0F9B75D49ECDF718F6DEABE83B6021DF47D74E0696B01BD3
B70BBA4776622128087F06592AFCD0854484050E809903525E5A6594DAFDD927
97EA50142019F6FA7380E5291626C9A12607ACF74CE6C6A9D6B15C591D6FD920
B20BC8168F2FE5E3F22E7A182C702775D8D44589E46004C0E360E59310B64A55
0B24F1E47C2E96FCD9B769572D6CF44F2525C22FB58955B7DCB565ED01FB07B3
F31C823FDA1E49D4EB939B6EF96497A4F9C25239FCDE2A792741AEF90CD48DAD
2671D859A0809C821050B12BBD5B443C7E2F634622CC622C0D6CBF655753A964
5E64CFB85C4105CFBC1005CD2F12FA92F8E112857682E92219BCC114F4B883E7
6D63E8F5CDA71BF70638FBA65AF17C182953FF02985393735C7FF14B1C181740
C828C5D794F8DE407060477229D52B0E202828AD78D39D96C12F4C073A0EA1C0
D0EBCC7DD0F45A1F0717A666B6443D37277388C1727BF6219ACE681CFCE03BCF
6DD091EA07B7683C4F1FDE01F4AB1FF4014D0BBF65DE7B0CFDE496A64647BF6C
ECAF18AE17CBC4CC481475A5AAFEE0953DC83F19F81AB10B9FEC2AAA6F1745BC
23905250DFB82743EEE032C57601FE7CAA7F9389C5158D28010BDFE304F249C6
2FE0E2102B0B4B60D63B4E8C92813ECEC632F873F1163B23A48275ED71421D16
D8E37E84BE35F834C29F7BDBA9A2D993E6AFC93B5C278864E881D016F0196D34
434E43B0032087C7611DA04D084668E7FE12F5CFA55E3E4EA31F7D30A257E0FD
762D8A4EFDE3A11C96C46DE54C71F23738F85AC1417F0EB8E23340BED119B5F8
0995C7DDD015F42B3F26C4BF8ADB12BAE42B05FB6E2688DADCE1A2428B592A94
D2E103897E6401AE7520653A162C33E0B98354A0E38917F2574710642ABBDE43
0FD69175419F0036B391FC59ED3479AAF0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /GKCFGP+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 351 295 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 2 3510 2948 re
W
/DeviceGray {} cs
[1] sc
0 2 3510 2948 re
f
538.797 379.996 2804.4 2487.6 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
538.797 379.996 2804.403 2487.604 re
S
[0 40] 0 d
3.33333 w
1 J
/DeviceGray {} CS
[0] SC
538.797 379.996 m
538.797 2867.6 l
S
538.797 2867.6 m
538.797 2867.6 l
S
1096.8 379.996 m
1096.8 2867.6 l
S
1096.8 2867.6 m
1096.8 2867.6 l
S
1658.4 379.996 m
1658.4 2867.6 l
S
1658.4 2867.6 m
1658.4 2867.6 l
S
2220 379.996 m
2220 2867.6 l
S
2220 2867.6 m
2220 2867.6 l
S
2781.6 379.996 m
2781.6 2867.6 l
S
2781.6 2867.6 m
2781.6 2867.6 l
S
3343.2 379.996 m
3343.2 2867.6 l
S
3343.2 2867.6 m
3343.2 2867.6 l
S
538.797 379.996 m
3343.2 379.996 l
S
3343.2 379.996 m
3343.2 379.996 l
S
538.797 1179.2 m
3343.2 1179.2 l
S
3343.2 1179.2 m
3343.2 1179.2 l
S
538.797 1974.8 m
3343.2 1974.8 l
S
3343.2 1974.8 m
3343.2 1974.8 l
S
538.797 2774 m
3343.2 2774 l
S
3343.2 2774 m
3343.2 2774 l
S
[] 0 d
5 w
0 J
538.797 379.996 m
3343.2 379.996 l
S
538.797 2867.6 m
3343.2 2867.6 l
S
538.797 379.996 m
538.797 2867.6 l
S
3343.2 379.996 m
3343.2 2867.6 l
S
538.797 379.996 m
3343.2 379.996 l
S
538.797 379.996 m
538.797 2867.6 l
S
538.797 379.996 m
538.797 408.797 l
S
538.797 2867.6 m
538.797 2842.39 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 50.2797 22.1598] Tm
0 0 Td
/F8_0 14 Tf
(0)
[7.784
0] Tj
Q
1096.8 379.996 m
1096.8 408.797 l
S
1096.8 2867.6 m
1096.8 2842.39 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 106.08 22.1598] Tm
0 0 Td
/F8_0 14 Tf
(2)
[7.784
0] Tj
Q
1658.4 379.996 m
1658.4 408.797 l
S
1658.4 2867.6 m
1658.4 2842.39 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 162.24 22.1598] Tm
0 0 Td
/F8_0 14 Tf
(4)
[7.784
0] Tj
Q
2220 379.996 m
2220 408.797 l
S
2220 2867.6 m
2220 2842.39 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 218.4 22.1598] Tm
0 0 Td
/F8_0 14 Tf
(6)
[7.784
0] Tj
Q
2781.6 379.996 m
2781.6 408.797 l
S
2781.6 2867.6 m
2781.6 2842.39 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 274.56 22.1598] Tm
0 0 Td
/F8_0 14 Tf
(8)
[7.784
0] Tj
Q
3343.2 379.996 m
3343.2 408.797 l
S
3343.2 2867.6 m
3343.2 2842.39 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 326.76 22.1598] Tm
0 0 Td
/F8_0 14 Tf
(10)
[7.784
0
7.784
0] Tj
Q
538.797 379.996 m
564 379.996 l
S
3343.2 379.996 m
3314.39 379.996 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 43.4398 32.9598] Tm
0 0 Td
/F8_0 14 Tf
(0)
[7.784
0] Tj
Q
538.797 1179.2 m
564 1179.2 l
S
3343.2 1179.2 m
3314.39 1179.2 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 35.5199 112.88] Tm
0 0 Td
/F8_0 14 Tf
(50)
[7.784
0
7.784
0] Tj
Q
538.797 1974.8 m
564 1974.8 l
S
3343.2 1974.8 m
3314.39 1974.8 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 27.9598 192.44] Tm
0 0 Td
/F8_0 14 Tf
(100)
[7.784
0
7.784
0
7.784
0] Tj
Q
538.797 2774 m
564 2774 l
S
3343.2 2774 m
3314.39 2774 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 27.9598 272.36] Tm
0 0 Td
/F8_0 14 Tf
(150)
[7.784
0
7.784
0
7.784
0] Tj
Q
538.797 379.996 m
3343.2 379.996 l
S
538.797 2867.6 m
3343.2 2867.6 l
S
538.797 379.996 m
538.797 2867.6 l
S
3343.2 379.996 m
3343.2 2867.6 l
S
Q
q
538.797 376.398 2808.003 2491.202 re
W
[82.2222 30.8333] 0 d
20 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
675.598 2867.6 m
816 1625.6 l
956.398 1179.2 l
1096.8 1020.8 l
1237.2 891.199 l
1377.6 811.996 l
1518 747.199 l
1658.4 700.398 l
1798.8 667.996 l
1939.2 635.598 l
2079.6 635.598 l
2220 588.797 l
2360.4 574.398 l
2500.8 588.797 l
2641.2 556.398 l
2781.6 541.996 l
2922 541.996 l
3062.4 523.996 l
3202.8 523.996 l
3343.2 509.598 l
S
Q
q
0 2 3510 2948 re
W
20 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
643.199 2900 m
708 2835.2 l
S
708 2900 m
643.199 2835.2 l
S
783.598 1658 m
848.398 1593.2 l
S
848.398 1658 m
783.598 1593.2 l
S
924 1211.6 m
988.797 1146.8 l
S
988.797 1211.6 m
924 1146.8 l
S
1064.4 1053.2 m
1129.2 988.398 l
S
1129.2 1053.2 m
1064.4 988.398 l
S
1204.8 923.598 m
1269.6 858.797 l
S
1269.6 923.598 m
1204.8 858.797 l
S
1345.2 844.398 m
1410 779.598 l
S
1410 844.398 m
1345.2 779.598 l
S
1485.6 779.598 m
1550.4 714.797 l
S
1550.4 779.598 m
1485.6 714.797 l
S
1626 732.797 m
1690.8 667.996 l
S
1690.8 732.797 m
1626 667.996 l
S
1766.4 700.398 m
1831.2 635.598 l
S
1831.2 700.398 m
1766.4 635.598 l
S
1906.8 667.996 m
1971.6 603.199 l
S
1971.6 667.996 m
1906.8 603.199 l
S
2047.2 667.996 m
2112 603.199 l
S
2112 667.996 m
2047.2 603.199 l
S
2187.6 621.199 m
2252.4 556.398 l
S
2252.4 621.199 m
2187.6 556.398 l
S
2328 606.797 m
2392.8 541.996 l
S
2392.8 606.797 m
2328 541.996 l
S
2468.4 621.199 m
2533.2 556.398 l
S
2533.2 621.199 m
2468.4 556.398 l
S
2608.8 588.797 m
2673.6 523.996 l
S
2673.6 588.797 m
2608.8 523.996 l
S
2749.2 574.398 m
2814 509.598 l
S
2814 574.398 m
2749.2 509.598 l
S
2889.6 574.398 m
2954.4 509.598 l
S
2954.4 574.398 m
2889.6 509.598 l
S
3030 556.398 m
3094.8 491.598 l
S
3094.8 556.398 m
3030 491.598 l
S
3170.4 556.398 m
3235.2 491.598 l
S
3235.2 556.398 m
3170.4 491.598 l
S
3310.8 541.996 m
3375.6 477.199 l
S
3375.6 541.996 m
3310.8 477.199 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 186.72 9.91992] Tm
0 0 Td
/F8_0 14 Tf
(h)
[7.784
0] Tj
7.55977 -6.84023 Td
/F8_0 11 Tf
(0)
[6.116
0] Tj
[0 1 -1 0 13.9199 149.96] Tm
0 0 Td
/F8_0 14 Tf
(R)
[10.108
0] Tj
10.0801 -6.83984 Td
/F8_0 11 Tf
(opt)
[6.116
0
6.116
0
3.058
0] Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font GKCFGP+Helvetica
%%EOF
